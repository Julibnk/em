name: Backend Deployment Pipeline

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    paths:
      - 'backend/**'
defaults:
  run:
    working-directory: ./backend

jobs:
  cancel-previous:
    runs-on: ubuntu-22.04
    steps:
      - name: Cancela la ejecución anterior
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

  npm-ci:
    runs-on: ubuntu-22.04
    steps:
      - name: Descarga el código fuente
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configura Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'

      - name: Instala las dependencias
        run: npm ci

  lint:
    needs: npm-ci
    runs-on: ubuntu-22.04

    steps:
      - name: Descarga el código fuente
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configura Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'

      - name: Instala dependencias
        run: npm ci

      - name: Ejecuta el linter
        run: npm run lint

  build:
    needs: npm-ci
    runs-on: ubuntu-22.04

    steps:
      - name: Descarga el código fuente
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configura Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'

      - name: Instala dependencias
        run: npm ci

      - name: Hace la build
        run: npm run build

  test:
    needs: [lint, build]
    runs-on: ubuntu-22.04
    environment: test
    container: node:16

    env:
      DATABASE_URL: 'postgres://postgres:postgres@postgres:5432/em_test'
      NODE_ENV: test

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: em_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Descarga el código fuente
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configura Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'

      - name: Instala prisma de forma global
        run: npm install -g prisma

      - name: Genera el prisma client
        run: prisma generate

      - name: Migra el esquema de BD
        run: prisma migrate deploy

      - name: Instala dependencias
        run: npm ci

      - name: Ejecuta los tests
        run: npm test
